#include <cstdio>
#include <iostream>
#include <sstream>
#include <fstream>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <string>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <list>
#include <cstdlib>
#include <ctime> 
using namespace std; 

#define CLEAR(a) memset((a),0,sizeof(a))
#define CLEARF(a) memset((a),-1,sizeof(a)) const int INF = (-1u) >> 2;

const double EPS = 1e-8;
const double PI = acos(-1.0);

typedef long long LL;

const int MAXN = 200000;

LL data[MAXN];
LL bit[50]; 

bool cmp(LL a, LL b){
	return a > b;
}

int main() {
	int n, i, j, id;
	LL ans1, ans2;
	bit[0] = 1;
	for (i = 1; i <= 31; i++) bit[i] = (bit[i - 1] << 1);
	scanf("%d", &n);
	for (i = 1; i <= n; i++) scanf("%lld", &data[i]);
	for (i = 1; i <= n; i++) {
		if (data[i] == 0) continue;
		id = -1;
		for (j = 30; j >= 0; j--) {
			if (data[i] & bit[j]) {
				id = j;
				break;
			}
		}
		for (j = 1; j <= n; j++) {
			if (j != i && (data[j] & bit[id])) data[j] ^= data[i];
		}
	}
	sort(data + 1, data + n + 1, cmp);
	for (i = 1; i <= n; i++) {
		if (data[i] == 0) {
			n = i - 1;
			break;
		}
	}
	ans1 = ans2 = 0;
	for (i = 1; i <= n; i++) {
		ans1 ^= data[i];
		ans2 ^= data[i];
	}
	ans2 ^= data[n];
	printf("%lld %lld\n", ans1, ans2);
	return 0;
}