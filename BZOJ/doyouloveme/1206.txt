#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <set>
#include <map>
#include <utility>
#include <queue>
using namespace std;

typedef pair<int, int> PII;
int n, m, Time(0), ans(0);

struct state
{
    int used, first;
    bool in_que;
    state(){}
    state(int _first): used(1), first(_first), in_que(1){}
};

map<int, state> MAP;

struct node
{
    int id, used, first;
    node(const state &s, int _id)
    {
        used = s.used;
		first = s.first;
        id = _id;
    }
    bool operator < (const node &o) const
    {
		return (o.used < used) || (used == o.used && o.first < first);
    }
};

priority_queue<node> que;

void Check()
{
    while(que.size() >= n)
    {
        node t = que.top();
		que.pop();
        if(t.used < MAP[t.id].used)
        {
            t.used = MAP[t.id].used;
            que.push(t);
        }
        else
        {
            state &s = MAP[t.id];
            s.in_que = 0;
            s.used = 1;
            break;
        }
    }
}

void Insert(int x)
{
    if(MAP.count(x))
    {
        state &s = MAP[x];
        if(s.in_que)
        {
            ans++;
			s.used++;
			s.first = Time;
        }
        else
        {
            Check();
			s.in_que = 1;
			s.first = Time;
            que.push(node(s, x));
        }
    }
    else
    {
        state s(Time);
		MAP[x]=s;
        Check();
        que.push(node(s, x));
    }
}

int main()
{
    scanf("%d%d", &n, &m);
	int x;
    while(m--)
    {
        scanf("%d", &x);
        Insert(x);
        ++Time;
    }
    printf("%d", ans);
}
