{
Problem         USACO_2006_Nov Fence Repair
Algorithm       Greedy & Heap
Author          DS
Date            2011/11/8 15:01
Complexity      O(nlogn)
}
program bzoj1726;

const
  maxlongint = 1000000000;

type
  Data = record
    p, d: longint;
  end;
  arr = array[1..5000] of longint;

var
  g: array[1..5000, 0..500] of Data;
  dis1, dis2: arr;
  line: array[1..1000000] of longint;
  n, r, i, j, x, y, z, p, q, min, min2, calc: longint;

  procedure spfa(st: longint; var dis: arr);
  begin
    for i := 1 to n do
      dis[i] := maxlongint;
    dis[st] := 0;
    p := 1;
    q := 1;
    line[1] := st;
    while p <= q do
    begin
      for i := 1 to g[line[p], 0].p do
        if dis[line[p]] + g[line[p], i].d < dis[g[line[p], i].p] then
        begin
          dis[g[line[p], i].p] := dis[line[p]] + g[line[p], i].d;
          Inc(q);
          line[q] := g[line[p], i].p;
        end;
      Inc(p);
    end;
  end;

begin
  Read(n, r);
  for i := 1 to r do
  begin
    Read(x, y, z);
    Inc(g[x, 0].p);
    Inc(g[y, 0].p);
    g[x, g[x, 0].p].p := y;
    g[y, g[y, 0].p].p := x;
    g[x, g[x, 0].p].d := z;
    g[y, g[y, 0].p].d := z;
  end;
  spfa(1, dis1);
  spfa(n, dis2);
  min := dis1[n];
  min2 := maxlongint;
  for i := 1 to n do
    for j := 1 to g[i, 0].p do
    begin
      calc := dis1[i] + dis2[g[i, j].p] + g[i, j].d;
      if calc > min then
        if calc < min2 then
          min2 := calc;
    end;
  writeln(min2);
end.
