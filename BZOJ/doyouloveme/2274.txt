#include <algorithm>
#include <iostream>
#include <cstdio>
#define MAXN 100010
#define MOD 1000000009
using namespace std;

int n, a[MAXN], b[MAXN];
int sum[MAXN], f[MAXN];

struct binaryIndexTree{
	void modify(int k, int x){
		for(; k <= n; k += k & -k)
			sum[k] = (sum[k] + x) % MOD;
	}
	int getSum(int k){
		int s = 0;
		for(; k; k -= k & -k)
			s = (s + sum[k]) % MOD;
		return s;
	}
} BIT;

int main(){
	scanf("%d", &n);
	for(int i = 1; i <= n; ++i){
		scanf("%d", &a[i]);
		b[i] = a[i] += a[i - 1];
	}
	sort(b + 1, b + 1 + n);
	for(int i = 1; i <= n; ++i){
		int pos = lower_bound(b + 1, b + 1 + n, a[i]) - b;
		f[i] = BIT.getSum(pos);
		if(a[i] >= 0)
			f[i] = (f[i] + 1) % MOD;
		BIT.modify(pos, f[i]);
	}
	cout << f[n] << endl;
}

