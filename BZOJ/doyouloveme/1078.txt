#include <algorithm>
#include <iostream>
#include <cstdio>
#include <vector>
#define rep(i, n) for(int i = 1; i <= n; i++)
using namespace std;
typedef vector<int> que;
int n, m, l[500], r[500];

que ans(int root){
	que Q, Q1, Q2;
	Q.clear();
	if(!l[root] && !r[root]){
		Q.push_back(root);
		return Q;
	}
	if(l[root])
		Q1 = ans(l[root]);
	if(r[root])
		Q2 = ans(r[root]);
	int s1 = Q1.size(), s2 = Q2.size();
	if(s1 == s2 || s1 == s2 + 1){
		int a = 0, b = 0;
		if(root < Q1[0]){
			Q.push_back(root);
			rep(i, s1 + s2)
				if(i % 2 == (s1 != s2)){
					Q.push_back(Q1[a]);
					a++;
				}
				else{
					Q.push_back(Q2[b]);
					b++;
				}
		}
		else{
			rep(i, s1 + s2)
				if(i % 2 == (s1 != s2)){
					Q.push_back(Q1[a]);
					a++;
					if(a == 1)
						Q.push_back(root);
				}
				else{
					Q.push_back(Q2[b]);
					b++;
				}
		}
		return Q;
	}
	else{
		if(s1 > s2){
			for(int i = 0; i < s1 - s2; i++)
				Q.push_back(Q1[i]);
			int a = s1 - s2, b = 0;
			Q.push_back(root);
			for(int i = 1; i <= s2 * 2; i++)
				if(i % 2 == 0){
					Q.push_back(Q1[a]);
					a++;
				}
				else{
					Q.push_back(Q2[b]);
					b++;
				}
			return Q;
		}
		else{
			for(int i = 0; i < s2 - s1 + 1; i++)
				Q.push_back(Q2[i]);
			int a = 0, b = s2 - s1 + 1;
			Q.push_back(root);
			for(int i = 1; i <= s1 * 2 - 1; i++)
				if(i % 2 == 1){
					Q.push_back(Q1[a]);
					a++;
				}
				else{
					Q.push_back(Q2[b]);
					b++;
				}
			return Q;
		}
	}
}

int main(){
	scanf("%d", &n);
	rep(i, n){
		scanf("%d", &m);
		if(m < 100)
			l[m] = i;
		else
			r[m - 100] = i;
	}
	que Q = ans(0);
	rep(i, Q.size())
		printf("%d ", Q[i - 1]);
	printf("\n");
	return 0;
}
