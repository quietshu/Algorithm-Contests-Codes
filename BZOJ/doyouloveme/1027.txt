#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cmath>
#define MAX 600
#define eps 1e-9
#define rep(i, n) for(int i = 1; i <= n; i++)
using namespace std;

const int inf = ~0U >> 1;

int n, m, dis[MAX][MAX];
double x[MAX], y[MAX], z, a[MAX], b[MAX], c;
	
int sign(double x){
	return x < -eps ? -1 : x > eps;
}
	
bool det(int i, int j, int k){
	double t = x[i] * y[j] + y[i] * a[k] + x[j] * b[k] - y[j] * a[k] - b[k] * x[i] - y[i] * x[j];
	if(sign(t) == -1)
		return 1;
	if(sign(t) == 0 && ((a[k] > max(x[i], x[j])) || (a[k] < min(x[i], x[j]))))
		return 1;
	return 0;
}

int main(){
	scanf("%d%d", &n, &m);
	rep(i, n)
		scanf("%lf%lf%lf", &x[i], &y[i], &z);
	rep(i, m)
		scanf("%lf%lf%lf", &a[i], &b[i], &c);
	rep(i, n){
		bool ok = 1;
		rep(j, m)
			if(sign(x[i] - a[j]) || sign(y[i] - b[j])){
				ok = 0;
				break;
			}
		if(ok){
			printf("1\n");
			return 0;
		}
	}
	rep(i, n)
		rep(j, n)if(i != j){
			bool ok = 1;
			rep(k, m)
				if(det(i, j, k)){
					ok = 0;
					break;
				}
			if(ok)
				dis[i][j] = 1;
		}
	rep(k, n)
		rep(i, n)
			rep(j, n)
				if(dis[i][k] && dis[k][j])
					if(!dis[i][j] || dis[i][j] > dis[i][k] + dis[k][j])
						dis[i][j] = dis[i][k] + dis[k][j];
	int ans = inf;
	rep(i, n)
		if(dis[i][i] && dis[i][i] < ans)
			ans = dis[i][i];
	rep(i, n)
		rep(j, n)
			if(dis[i][j] && dis[j][i] && (dis[i][j] + dis[j][i] < ans))
				ans = dis[i][j] + dis[j][i];
	printf("%d\n", ans < inf ? ans : -1);
	return 0;
}
