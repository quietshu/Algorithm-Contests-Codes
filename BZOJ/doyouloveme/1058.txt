#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdio>
#include <queue>
#include <cmath>
#include <set>
#define MAXN 500050
#define rep(i, n) for(int i = 1; i <= n; ++i)
using namespace std;

const int inf = ~0U >> 1;

struct qset{
	multiset<int> s;
	int _min;
	qset(){_min = inf; }
	void insert(int x){
		multiset<int>::iterator it;
		it = s.insert(x);
		if(it != s.begin())
			_min = min(_min, x - *(--it)), ++it;
		++it;
		if(it != s.end())
			_min = min(_min, *it - x);
	}
} ALL;

multiset<int> del;
priority_queue<int> gap;

int n, m, x, y, len, tmp, a[MAXN][2];
char cmd[20];

int main(){
	scanf("%d%d", &n, &m);
	rep(i, n){
		scanf("%d", &a[i][0]);
		a[i][1] = a[i][0];
		ALL.insert(a[i][1]);
	}
	rep(i, n - 1)
		gap.push(-abs(a[i][1] - a[i + 1][0]));
	while(m--){
		scanf("%s", cmd);
		len = strlen(cmd);
		switch(len){
			case 6:
				scanf("%d%d", &x, &y);
				ALL.insert(y);
				gap.push(-abs(a[x][1] - y));
				if(x < n){
					gap.push(-abs(y - a[x + 1][0]));
					tmp = abs(a[x][1] - a[x + 1][0]);
					del.insert(tmp);
				}
				a[x][1] = y;
				break;
			case 7:
				tmp = -gap.top();
				while(del.count(tmp)){
					del.erase(tmp);
					gap.pop();
					tmp = -gap.top();
				}
				printf("%d\n", tmp);
				break;
			case 12:
				printf("%d\n", ALL._min);
				break;
		}
	}
	return 0;
}
