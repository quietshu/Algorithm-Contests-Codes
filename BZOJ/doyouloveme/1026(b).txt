#include <iostream>
#include <cstdlib>
#include <algorithm>
#include <cstdio>
#include <cmath>
#define debug(x) cout << #x << " = " << x << endl;
using namespace std;
int a[11], b[11], al = 0, bl = 0;
int f[11][11], A = 0, B = 0;
int dfsA(int m, int n)
{
    if(m == al && n != a[al])
        return 1;
    if(a[m] > n)
        return f[al - m + 1][n];
    int tot = 0;
    for(int i = 0; i <= a[m + 1]; i++)
        if(abs(n - i) >= 2)
            tot += dfsA(m + 1, i);
    return tot;
}
int dfsB(int m, int n)
{
    if(m == bl)
        return 1;
    if(b[m] > n)
        return f[bl - m + 1][n];
    int tot = 0;
    for(int i = 0; i <= b[m + 1]; i++)
        if(abs(n - i) >= 2)
            tot += dfsB(m + 1, i);
    return tot;
}
int main()
{
    char c = getchar();
    while(c == ' ' || c == '\n')
        c = getchar();
    while(c >= '0' && c <= '9')
    {
        a[++al] = c - '0';
        c = getchar();
    }
    while(c == ' ' || c == '\n')
        c = getchar();
    while(c >= '0' && c <= '9')
    {
        b[++bl] = c - '0';
        c = getchar();
    }
    for(int i = 0; i <= 9; i++)
        f[1][i] = 1;
    for(int i = 2; i <= 10; i++)
        for(int j = 0; j <= 9; j++)
            for(int k = 0; k <= 9; k++)
                if(abs(j - k) >= 2)
                    f[i][j] += f[i - 1][k];
    for(int i = 1; i <= a[1]; i++)
        A += dfsA(1, i);
    for(int t = 1; t < al; t++)
        for(int i = 1; i <= 9; i++)
            A += f[t][i];
    for(int i = 1; i <= b[1]; i++)
        B += dfsB(1, i);
    for(int t = 1; t < bl; t++)
        for(int i = 1; i <= 9; i++)
            B += f[t][i];
    printf("%d", B - A);
}
