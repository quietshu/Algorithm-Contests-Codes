/*
* Copyright (C) 2012 All rights reserved.
* File name:  1057.cpp
* Author:     Parabola_ds
* Creat time: 2012.06.06
*/
#include <algorithm>
#include <iostream>
#include <cstdlib>
#include <cstring>
#include <climits>
#include <vector>
#include <cstdio>
#include <queue>
#include <cmath>
#include <set>
#include <map>
#define MAXN 2000
#define rep(i, n) for(int i = 1; i <= n; ++i)
using namespace std;

int n, m, maxs, maxss, g[MAXN + 10][MAXN + 10];
int h[MAXN + 10][MAXN + 10], l[MAXN + 10][MAXN + 10], r[MAXN + 10][MAXN + 10];

int main(){
	scanf("%d%d", &n, &m);
	memset(g, -1, sizeof(g));
	rep(i, n)
		rep(j, m){
			scanf("%d", &g[i][j]);
			h[i][j] = 1;
			l[i][j] = r[i][j] = j;
			if(g[i][j] + g[i - 1][j] == 1)
				h[i][j] += h[i - 1][j];
			while(g[i][l[i][j]] + g[i][l[i][j] - 1] == 1 && h[i][l[i][j] - 1] >= h[i][j])
				l[i][j] = l[i][l[i][j] - 1];
		}
	rep(i, n)
		for(int j = m; j; --j){
			while(g[i][r[i][j]] + g[i][r[i][j] + 1] == 1 && h[i][r[i][j] + 1] >= h[i][j])
				r[i][j] = r[i][r[i][j] + 1];
			maxs = max(maxs, h[i][j] * (r[i][j] - l[i][j] + 1));
			int len = min(h[i][j], r[i][j] - l[i][j] + 1);
			maxss = max(maxss, len * len);
		}
	cout << maxss << endl << maxs << endl;
	return 0;
}

