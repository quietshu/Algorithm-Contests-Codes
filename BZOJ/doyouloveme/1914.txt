#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cmath>
#define PI 3.141593
#define MAXN 100500
#define rep(i, n) for(int i = 1; i <= n; ++i)
using namespace std;
 
struct point{
    int x, y;
    double a;
    bool operator < (const point p) const{
        return a < p.a;
    }
} p[MAXN];
 
int n;
 
long long C(long long n, long long m){
    long long tot = 1;
    rep(i, m)
        tot = tot * n / i, --n;
    return tot;
}
 
int GET(int i){
    double find_a = p[i].a + PI;
    if(find_a > 2 * PI)
        find_a -= 2 * PI;
    int l = 1, r = n, mid;
    while(l <= r){
        mid = (l + r) / 2;
        if(p[mid].a <= find_a)
            l = mid + 1;
        else
            r = mid - 1;
    }
    return l - 1;
}
 
int main(){
    scanf("%d", &n);
    rep(i, n){
        scanf("%d%d", &p[i].x, &p[i].y);
        if(p[i].x == 0){
            if(p[i].y > 0)
                p[i].a = 0.5 * PI;
            else
                p[i].a = 1.5 * PI;
        }
        else{
            p[i].a = atan((double)p[i].y / p[i].x);
            if(p[i].x < 0)
                p[i].a += PI;
            else
                if(p[i].y < 0)
                    p[i].a += 2 * PI;
        }
    }
    sort(p + 1, p + 1 + n);
    long long tot = C(n, 3);
    rep(i, n){
        int k = GET(i);
        k -= i;
        if(k < 0)
            k += n;
        tot -= C(k, 2);
    }
    printf("%lld\n", tot);
}

