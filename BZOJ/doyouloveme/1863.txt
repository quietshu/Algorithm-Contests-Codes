#include <algorithm>
#include <iostream>
#include <cstdio>
#define MAXN 20000
#define rep(i, n) for(int i = 1; i <= n; ++i)
using namespace std;

const int inf = ~0U >> 1;
int n, a[MAXN + 10], L[MAXN + 10], R[MAXN + 10];

bool check(int m){
	L[1] = R[1] = a[1];
	for(int i = 2; i <= n; ++i){
		if(a[i] + a[i - 1] > m) return 0;
		L[i] = 0; R[i] = a[1];
		R[i] = min(R[i], a[1]);
		R[i] = min(R[i], a[i]);
		R[i] = min(R[i], a[1] - L[i - 1]);
		L[i] = max(L[i], 0);
		L[i] = max(L[i], a[i] + a[1] + a[i - 1] - R[i - 1] - m);
		L[i] = max(L[i], a[i] + a[1] - m);
		if(L[i] > R[i]) return 0;
	}
	return L[n] <= 0;
}

int main(){
	scanf("%d", &n);
	rep(i, n) scanf("%d", &a[i]);
	int l = 0, r = inf, m;
	while(l + 1 < r){
		m = (l + r) >> 1;
		if(check(m))
			r = m;
		else
			l = m;
	}
	printf("%d\n", r);
	return 0;
}

