program matrix;
 
var
  n, m, k, i, j, o: longint;
  s: array[1..2, 0..100] of longint;
  f: array[0..100, 0..100, 0..10] of longint;
 
  function max(a, b: longint): longint;
  begin
    if a > b then
      max := a
    else
      max := b;
  end;
 
  function dp(i, j, k: integer): longint;
  var
    p: longint;
  begin
    if (i >= n) or (j >= n) or (k <= 0) then
      exit(0);
    if f[i, j, k] <> -100000 then
      exit(f[i, j, k]);
    f[i, j, k] := max(max(dp(i + 1, j, k), dp(i, j + 1, k)), dp(i + 1, j + 1, k));
    for p := i + 1 to n do
      f[i, j, k] := max(f[i, j, k], dp(p, j, k - 1) + s[1, p] - s[1, i]);
    if m = 2 then
    begin
      for p := j + 1 to n do
        f[i, j, k] := max(f[i, j, k], dp(i, p, k - 1) + s[2, p] - s[2, j]);
      if i = j then
        for p := i + 1 to n do
          f[i, j, k] := max(f[i, j, k], dp(p, p, k - 1) + s[1, p] -
            s[1, i] + s[2, p] - s[2, i]);
    end;
    exit(f[i, j, k]);
  end;
 
begin
  Read(n, m, k);
  s[1, 0] := 0;
  s[2, 0] := 0;
  for i := 1 to n do
  begin
    Read(s[1, i]);
    if m=2 then read(s[2, i]);
    s[1, i] := s[1, i] + s[1, i - 1];
    if m=2 then s[2, i] := s[2, i] + s[2, i - 1];
  end;
  for i := 0 to n do
    for j := 0 to n do
      for o := 0 to k do
        f[i, j, o] := -100000;
  Write(dp(0, 0, k));
end.
