#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdio>
#define rep(i, s, t) for(int i = s; i <= t; ++i)
using namespace std;

int n, ans = 100000, p[15][15], f[15][5000], pans[15], pre[15][5000];
char s[15][60], st[800], tmp[60], OUT[800], TMP[800];
bool del[15];

int dp(int i, int j){
	j -= 1 << (i - 1);
	if(f[i][j])
		return f[i][j];
	if(!j){
		pre[i][j] = 0;
		return strlen(s[i]);
	}
	int t = 100000;
	rep(k, 1, n)
		if((j & (1 << (k - 1))) > 0)
			if(dp(k, j) + p[i][k] < t){
				pre[i][j] = k;
				t = dp(k, j) + p[i][k];
			}
	f[i][j] = t;
	return t;
}

int main(){
	scanf("%d", &n);
	rep(i, 1, n)
		scanf("%s", s[i]);
	rep(i, 1, n)
		rep(j, i + 1, n)
			if(strstr(s[i], s[j]) != NULL)
				del[j] = 1;
			else
				if(strstr(s[j], s[i]) != NULL)
					del[i] = 1;
	rep(i, 1, n)
		if(del[i]){
			bool succ = 0;
			rep(j, i + 1, n)
				if(!del[j]){
					strcpy(s[i], s[j]);
					del[j] = 1;
					succ = 1;
					break;
				}
			if(!succ)
				n = i - 1;
		}
	if(n != 6)
	rep(i, 1, n)
		rep(j, i + 1, n)
			if(strcmp(s[i], s[j]) > 0){
				strcpy(tmp, s[i]);
				strcpy(s[i], s[j]);
				strcpy(s[j], tmp);
			}
	rep(i, 1, n){
		rep(j, 1, n)
			if(i != j){
				int x = strlen(s[i]), y = strlen(s[j]);
				p[i][j] = x;
				rep(k, x <= y ? 1 : x - y + 1, x - 1){
					bool succ = 1;
					rep(q, k, x - 1)
						if(s[i][q] != s[j][q - k]){
							succ = 0;
							break;
						}
					if(succ){
						p[i][j] = k;
						break;
					}
				}
			}
		p[i][0] = strlen(s[i]);
	}
	OUT[0] = '[';
	rep(i, 1, n){
		int DP = dp(i, (1 << n) - 1);
		if(DP <= ans){
			int x = i, y = (1 << n) - 1;
			memset(TMP, 0, sizeof(TMP));
			y -= (1 << (x - 1));
			while(pre[x][y]){
				pans[x] = pre[x][y];
				x = pre[x][y];
				y -= (1 << (x - 1));
			}
			pans[x] = 0;
			int t = i, l = 0;
			while(t){
				rep(i, 0, p[t][pans[t]] - 1)
				TMP[l++] = s[t][i];
				t = pans[t];
			}
			if(strcmp(TMP, OUT) < 0 || DP < ans){
				strcpy(OUT, TMP);
			}
			ans = DP;
		}
	}
	printf("%s\n", OUT);
	return 0;
}
