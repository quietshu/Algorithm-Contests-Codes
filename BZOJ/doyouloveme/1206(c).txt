#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <set>
#include <utility>
#include <queue>
using namespace std;
 
typedef pair<int, int> PII;
int n, m, x, Time(0), ans(0);
 
struct state{
    int used, first;
    bool in_que;
    state(){}
    state(int _first): used(1), first(_first), in_que(1){}
};
 
state MAP[5000000];
 
inline int hash(int x){
        return x % 1133311;
}
 
struct node{
    int id, used, first;
    node(const state &s, int _id){
        used = s.used;
                first = s.first;
        id = _id;
    }
    bool operator < (const node &o) const{
                return (o.used < used) || (used == o.used && o.first < first);
    }
};
 
priority_queue<node> que;
 
void Check(){
    while(que.size() >= n){
        node t = que.top();
                que.pop();
        if(t.used < MAP[hash(t.id)].used){
            t.used = MAP[hash(t.id)].used;
            que.push(t);
        }
        else{
            state &s = MAP[hash(t.id)];
            s.in_que = 0;
            s.used = 1;
            break;
        }
    }
}
 
void Insert(int x){
    if(MAP[hash(x)].used){
        state &s = MAP[hash(x)];
        if(s.in_que){
                ans++;
                s.used++;
                s.first = Time;
        }
        else{
                Check();
                s.in_que = 1;
                s.first = Time;
                que.push(node(s, x));
        }
    }
    else{
        state s(Time);
                MAP[hash(x)]=s;
        Check();
        que.push(node(s, x));
    }
}
 
inline void read(int &n){
        char c = getchar(); n = 0;
        while(c < '0' || c > '9') c = getchar();
        while(c >= '0' && c <= '9'){
                n = n * 10 + c - '0';
                c = getchar();
        }
}
 
int main(){
    scanf("%d%d", &n, &m);
    while(m--){
        read(x);
        Insert(x);
        ++Time;
    }
    printf("%d\n", ans);
        return 0;
}
