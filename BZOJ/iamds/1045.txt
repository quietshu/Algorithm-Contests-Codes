
program bzoj1045;

var
  n, i: longint;
  avg, tot: int64;
  a: array[1..1000001] of int64;

  procedure qsort(i, j: longint);
  var
    p, q, key: longint;
  begin
    p := i;
    q := j;
    key := a[(p + q) shr 1];
    a[(p + q) shr 1] := a[p];
    a[p] := key;
    while p < q do
    begin
      while (p < q) and (key <= a[q]) do
        Dec(q);
      if p <> q then
      begin
        a[p] := a[q];
        Inc(p);
      end;
      while (p < q) and (key >= a[p]) do
        Inc(p);
      if p <> q then
      begin
        a[q] := a[p];
        Dec(q);
      end;
    end;
    a[p] := key;
    if p - i > 1 then
      qsort(i, p - 1);
    if j - q > 1 then
      qsort(q + 1, j);
  end;

begin
  Read(n);
  avg := 0;
  for i := 1 to n do
  begin
    Read(a[i]);
    avg := avg + a[i];
  end;
  avg := avg div n;
  for i := 1 to n do
    a[i] := avg - a[i];
  avg := a[n];
  for i := n - 1 downto 2 do
    a[i] := a[i] + a[i + 1];
  tot := 0;
  a[1] := 0;
  qsort(1, n);
  if n > 1 then
    avg := a[n div 2 + 1]
  else
    avg := a[1];
  tot := 0;
  for i := 1 to n do
    tot := tot + abs(a[i] - avg);
  Write(tot);
end.
