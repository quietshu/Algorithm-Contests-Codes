
program project2;

var
  n, m, i, j, ans, p, q, time: longint;
  s: array[0..2001, 0..2001] of longint;
  x, y: array[1..10000000] of longint;
  dis: array[0..2001, 0..2001] of longint;

  procedure adjust(a, b: longint);
  begin
    if dis[x[p], y[p]] + s[x[p] + a, y[p] + b] < dis[x[p] + a, y[p] + b] then
    begin
      dis[x[p] + a, y[p] + b] := dis[x[p], y[p]] + s[x[p] + a, y[p] + b];
      if (x[p] + a <> 2 * n) and (y[p] + b <> 0) then
      begin
        q := q mod 10000000 + 1;
        x[q] := x[p] + a;
        y[q] := y[p] + b;
      end
      else
      if dis[x[p] + a, y[p] + b] < ans then
        ans := dis[x[p] + a, y[p] + b];
    end;
  end;

begin
  Read(n, m);
  for i := 1 to n do
    for j := 1 to m - 1 do
      Read(s[i * 2 - 1, j * 2]);
  for i := 1 to n - 1 do
    for j := 1 to m do
      Read(s[i * 2, j * 2 - 1]);
  for i := 1 to n - 1 do
    for j := 1 to m - 1 do
      Read(s[i * 2, j * 2]);
  p := 1;
  q := 0;
  for i := 0 to 2 * n + 1 do
    for j := 0 to 2 * m + 1 do
      dis[i, j] := maxlongint;
  for i := 1 to m - 1 do
  begin
    dis[1, i * 2] := s[1, i * 2];
    Inc(q);
    x[q] := 1;
    y[q] := i * 2;
  end;
  for i := 1 to n - 1 do
  begin
    dis[i * 2, m * 2 - 1] := s[i * 2, m * 2 - 1];
    Inc(q);
    x[q] := i * 2;
    y[q] := m * 2 - 1;
  end;
  ans := maxlongint;
  time := 0;
  while True do
  begin
    Inc(time);
    if time > 100000000 then
    begin
      Write(ans);
      halt;
    end;
    if p > q then
      break;
    if x[p] and 1 = 1 then
    begin
      if x[p] > 1 then
      begin
        adjust(-1, 0);
        adjust(-1, -1);
      end;
      adjust(1, 0);
      adjust(1, 1);
      p := p mod 10000000 + 1;
    end
    else
    begin
      if y[p] and 1 = 1 then
      begin
        adjust(0, -1);
        adjust(-1, -1);
        if y[p] < m * 2 - 1 then
        begin
          adjust(0, 1);
          adjust(1, 1);
        end;
        p := p mod 10000000 + 1;
      end
      else
      begin
        adjust(0, 1);
        adjust(0, -1);
        adjust(1, 0);
        adjust(-1, 0);
        p := p mod 10000000 + 1;
      end;
    end;
  end;
  {for i := 1 to 2 * (n - 1) do
    if dis[i, 0] < ans then
      ans := dis[i, 0];
  for i := 2 to 2 * m - 1 do
    if dis[2 * n, i] < ans then
      ans := dis[2 * n, i];}
  if m * n = 1 then
    ans := 0;
  Writeln(ans);
end.
