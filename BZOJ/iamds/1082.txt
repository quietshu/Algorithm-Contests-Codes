
{
[SCOI2005]栅栏
Algorithm:BinaryAnswer
}
 
program Project1;
 
type
  arr = array[0..1023] of longint;
var
  n, m, total, rest, mid: longint;
  rail, b, bs, sum: arr;
 
  procedure qsort(var a: arr; l, r: longint);
  var
    i, j, x, t: longint;
  begin
    i := l;
    j := r;
    x := a[(i + j) shr 1];
    repeat
      while a[i] < x do
        Inc(i);
      while a[j] > x do
        Dec(j);
      if i <= j then
      begin
        t := a[i];
        a[i] := a[j];
        a[j] := t;
        Inc(i);
        Dec(j);
      end;
    until i > j;
    if i < r then
      qsort(a, i, r);
    if l < j then
      qsort(a, l, j);
  end;
 
  procedure readdata;
  var
    i, j: longint;
  begin
    fillchar(sum, sizeof(sum), 0);
    fillchar(b, sizeof(b), 0);
    fillchar(rail, sizeof(rail), 0);
    readln(m);
    for i := 1 to m do
    begin
      readln(b[i]);
      Inc(total, b[i]);
    end;
    readln(n);
    for i := 1 to n do
      readln(rail[i]);
    qsort(b, 1, m);
 
    qsort(rail, 1, n);
    for i := 1 to n do
      sum[i] := sum[i - 1] + rail[i];
  end;
 
  function dfs(x, d: longint): boolean;
  var
    i: longint;
  begin
    if d = 0 then
      exit(True);
    if rest > total - sum[mid] then
      exit(False);
    for i := x to m do
      if bs[i] >= rail[d] then
      begin
        Dec(bs[i], rail[d]);
        if bs[i] < rail[1] then
          Inc(rest, bs[i]);
        if rail[d] = rail[d - 1] then
        begin
          if dfs(i, d - 1) then
            exit(True);
        end
        else if dfs(1, d - 1) then
          exit(True);
        if bs[i] < rail[1] then
          Dec(rest, bs[i]);
        Inc(bs[i], rail[d]);
      end;
    exit(False);
  end;
 
  procedure main;
  var
    i, j, l, r: longint;
  begin
    while sum[n] > total do
      Dec(n);
    l := 0;
    r := n;
    while l <= r do
    begin
      mid := (l + r) shr 1;
      bs := b;
      rest := 0;
      if dfs(1, mid) then
      begin
        l := mid + 1;
        j := 1;
      end
      else
      begin
        r := mid - 1;
        j := 2;
      end;
    end;
    if j = 1 then
      writeln(mid)
    else
      writeln(mid - 1);
  end;
 
begin
  readdata;
  main;
end.
