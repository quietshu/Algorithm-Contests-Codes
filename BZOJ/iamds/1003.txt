
program orzWJMZBMR;

const
  inf = 1000000000;

var
  n, m, k, e, i, j, p, x, y, d: longint;
  g: array[1..20, 1..20] of longint;
  f: array[0..100] of longint;
  v: array[1..100, 1..20] of boolean;

  function spfacost(a, b: longint): longint;
  var
    line: array[1..10000] of longint;
    dis: array[1..20] of longint;
    can: array[1..20] of boolean;
    i, j, p, q: longint;
  begin
    for i := 1 to m do
      dis[i] := inf;
    dis[1] := 0;
    p := 1;
    q := 1;
    line[1] := 1;
    for i := 1 to m do
    begin
      can[i] := True;
      for j := a to b do
        if not v[j, i] then
        begin
          can[i] := False;
          break;
        end;
    end;
    while p <= q do
    begin
      for i := 1 to m do
        if can[i] then
          if dis[i] > dis[line[p]] + g[line[p], i] then
          begin
            Inc(q);
            line[q] := i;
            dis[i] := dis[line[p]] + g[line[p], i];
          end;
      Inc(p);
    end;
    exit(dis[m]);
  end;

begin
  Read(n, m, k, e);
  for i := 1 to m do
    for j := 1 to m do
      g[i, j] := inf;
  for i := 1 to e do
  begin
    Read(x, y);
    Read(g[x, y]);
    g[y, x] := g[x, y];
  end;
  fillchar(v, sizeof(v), True);
  Read(d);
  for i := 1 to d do
  begin
    Read(j, x, y);
    for p := x to y do
      v[p, j] := False;
  end;
  f[0] := 0;
  for i := 1 to n do
    f[i] := inf;
  for i := 1 to n do
    for j := 0 to i - 1 do
    begin
      p := spfacost(j + 1, i);
      if p < inf then
        if p * (i - j) + k + f[j] < f[i] then
          f[i] := p * (i - j) + k + f[j];
    end;
  Write(f[n] - k);
end.
